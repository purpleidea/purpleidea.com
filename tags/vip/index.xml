<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vip on purpleidea.com</title>
    <link>https://purpleidea.com/tags/vip/</link>
    <description>Recent content in Vip on purpleidea.com</description>
    <generator>Hugo</generator>
    <language>en-ca</language>
    <lastBuildDate>Thu, 23 Aug 2012 16:14:44 +0000</lastBuildDate>
    <atom:link href="https://purpleidea.com/tags/vip/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to avoid cluster race conditions or: How to implement a distributed lock manager in puppet</title>
      <link>https://purpleidea.com/blog/2012/08/23/how-to-avoid-cluster-race-conditions-or-how-to-implement-a-distributed-lock-manager-in-puppet/</link>
      <pubDate>Thu, 23 Aug 2012 16:14:44 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2012/08/23/how-to-avoid-cluster-race-conditions-or-how-to-implement-a-distributed-lock-manager-in-puppet/</guid>
      <description>I&amp;rsquo;ve been working on a puppet module for gluster. Both this, my puppet-gfs2 module, and other puppet clustering modules all share a common problem: How does one make sure that only certain operations happen on one node at a time?&#xA;The inelegant solutions are simple:&#xA;Specify manually (in puppet) which node the &#34;master&#34; is, and have it carry out all the special operations. Downside: Single point of failure for your distributed cluster, and you&#39;ve also written ugly asymmetrical code.</description>
    </item>
  </channel>
</rss>
