<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agpl3 on purpleidea.com</title>
    <link>https://purpleidea.com/tags/agpl3/</link>
    <description>Recent content in Agpl3 on purpleidea.com</description>
    <generator>Hugo</generator>
    <language>en-ca</language>
    <lastBuildDate>Thu, 20 Sep 2012 04:12:00 +0000</lastBuildDate>
    <atom:link href="https://purpleidea.com/tags/agpl3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>finding your software install $prefix from inside python</title>
      <link>https://purpleidea.com/blog/2012/09/20/finding-your-software-install-prefix-from-inside-python/</link>
      <pubDate>Thu, 20 Sep 2012 04:12:00 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2012/09/20/finding-your-software-install-prefix-from-inside-python/</guid>
      <description>Good python software developers tend to use distutils and include a setup.py with their code. The problem I often encounter is finding out which prefix your software has been installed in from within the python code. This might be necessary if you want to interact with some data that you&amp;rsquo;ve installed into: $prefix/share/projectname/ Here are the various steps:&#xA;1) Distutils: NAME=&amp;#39;someproject&amp;#39; distutils.core.setup( name=NAME, version=&amp;#39;0.1&amp;#39;, author=&amp;#39;James Shubin&amp;#39;, author_email=&amp;#39;secret@purpleidea.com&amp;#39;, url=&amp;#39;https://purpleidea.com/&amp;#39;, description=&amp;#39;This is an example project&amp;#39;, # http://pypi.</description>
    </item>
  </channel>
</rss>
