<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dsl on purpleidea.com</title>
    <link>https://purpleidea.com/tags/dsl/</link>
    <description>Recent content in Dsl on purpleidea.com</description>
    <generator>Hugo</generator>
    <language>en-ca</language>
    <lastBuildDate>Fri, 22 Nov 2024 18:16:00 -0500</lastBuildDate>
    <atom:link href="https://purpleidea.com/tags/dsl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mgmt Configuration Language: Functions</title>
      <link>https://purpleidea.com/blog/2024/11/22/functions-in-mgmt/</link>
      <pubDate>Fri, 22 Nov 2024 18:16:00 -0500</pubDate>
      <guid>https://purpleidea.com/blog/2024/11/22/functions-in-mgmt/</guid>
      <description>It&amp;rsquo;s been a little while since I introduced the Mgmt Configuration Language. I originally wrote this article in 2019, and as I was working on it alongside the code for functions, when I realized that lambdas didn&amp;rsquo;t work properly. It took some time to finally solve that properly. Since then I&amp;rsquo;ve been working to get mgmt production ready. It&amp;rsquo;s properly useful for production now, and so it&amp;rsquo;s time for me to catch up on my documentation.</description>
    </item>
    <item>
      <title>Mgmt Configuration Language: Class and Include</title>
      <link>https://purpleidea.com/blog/2019/07/26/class-and-include-in-mgmt/</link>
      <pubDate>Fri, 26 Jul 2019 06:35:00 -0400</pubDate>
      <guid>https://purpleidea.com/blog/2019/07/26/class-and-include-in-mgmt/</guid>
      <description>It&amp;rsquo;s been a little over a year since I introduced the Mgmt Configuration Language. A lot has happened since then, and I&amp;rsquo;d like to introduce some of the missing features that weren&amp;rsquo;t available when the language was first introduced. If you haven&amp;rsquo;t already read that post, please start there and come back when you&amp;rsquo;re finished. In this article we&amp;rsquo;ll learn about classes.&#xA;Classes:&#xA;You might remember that the mgmt language called mcl has both statements, and expressions.</description>
    </item>
    <item>
      <title>Iteration in Puppet</title>
      <link>https://purpleidea.com/blog/2013/11/17/iteration-in-puppet/</link>
      <pubDate>Sun, 17 Nov 2013 04:25:01 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2013/11/17/iteration-in-puppet/</guid>
      <description>People often ask how to do iteration in Puppet. Most Puppet users have a background in imperative programming, and are already very familiar with for loops. Puppet is sometimes confusing at first, because it is actually (or technically, contains) a declarative, domain-specific language. In general, DSL&amp;rsquo;s aren&amp;rsquo;t always Turing complete, nor do they need to support loops, but this doesn&amp;rsquo;t mean you can&amp;rsquo;t iterate.&#xA;Until recently, Puppet didn&amp;rsquo;t have an explicit looping construct, and it is quite possible to build complex modules without using this new construct.</description>
    </item>
  </channel>
</rss>
