<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vagrant on purpleidea.com</title>
    <link>https://purpleidea.com/tags/vagrant/</link>
    <description>Recent content in Vagrant on purpleidea.com</description>
    <generator>Hugo</generator>
    <language>en-ca</language>
    <lastBuildDate>Fri, 07 Oct 2016 15:33:17 +0000</lastBuildDate>
    <atom:link href="https://purpleidea.com/tags/vagrant/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Remote execution in mgmt</title>
      <link>https://purpleidea.com/blog/2016/10/07/remote-execution-in-mgmt/</link>
      <pubDate>Fri, 07 Oct 2016 15:33:17 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2016/10/07/remote-execution-in-mgmt/</guid>
      <description>Bootstrapping a cluster from your laptop, or managing machines without needing to first setup a separate config management infrastructure are both very reasonable and fundamental asks. I was particularly inspired by Ansible&amp;rsquo;s agent-less remote execution model, but never wanted to build a centralized orchestrator. I soon realized that I could have my ice cream and eat it too.&#xA;Prior knowledge&#xA;If you haven&amp;rsquo;t read the earlier articles about mgmt, then I recommend you start with those, and then come back here.</description>
    </item>
    <item>
      <title>Upcoming speaking</title>
      <link>https://purpleidea.com/blog/2016/01/18/upcoming-speaking/</link>
      <pubDate>Mon, 18 Jan 2016 00:32:52 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2016/01/18/upcoming-speaking/</guid>
      <description>I&amp;rsquo;ve got a few upcoming speaking engagements. If you&amp;rsquo;ll be attending one of these events, come see me or any of the other excellent speakers!&#xA;Please remember to check the official schedules in case there are any changes!&#xA;I&amp;rsquo;ll be speaking at the Brussels CentOS Dojo:&#xA;Automated Infrastructure Testing with Oh-My-Vagrant ...and the CentOS CI Time/date unconfirmed: I&#39;ll be showing some CI tricks, and showing you how the CentOS CI is the perfect CI for multi-machine test environments.</description>
    </item>
    <item>
      <title>Trying out Ceph with Oh-My-Vagrant</title>
      <link>https://purpleidea.com/blog/2015/12/28/trying-out-ceph-with-oh-my-vagrant/</link>
      <pubDate>Mon, 28 Dec 2015 14:59:23 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/12/28/trying-out-ceph-with-oh-my-vagrant/</guid>
      <description>Daniel P. Berrangé wrote about trying out a single node ceph cluster. I decided to take his article and turn it into an Oh-My-Vagrant omv.yaml file. It took me about two minutes to do so, and two hours to debug a problem caused by something I had broken on my laptop.&#xA;If you&amp;rsquo;d like to replicate his article in less than 5 minutes, pull down the omv.yaml file that I&amp;rsquo;ve just published and run omv up.</description>
    </item>
    <item>
      <title>Thanking Oh-My-Vagrant contributors for version 1.0.0</title>
      <link>https://purpleidea.com/blog/2015/08/18/thanking-oh-my-vagrant-contributors-for-version-1-0-0/</link>
      <pubDate>Tue, 18 Aug 2015 03:12:26 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/08/18/thanking-oh-my-vagrant-contributors-for-version-1-0-0/</guid>
      <description>The Oh-My-Vagrant project became public about one year ago and at the time it was more of a fancy template than a robust project, but 188 commits (and counting) later, it has gotten surprisingly useful and mature.&#xA;james@computer:~/code/oh-my-vagrant$ git rev-list HEAD --count 188 james@computer:~/code/oh-my-vagrant$ git log $(git log --pretty=format:%H|tail -1) commit 4faa6c89cce01c62130ef5a6d5fa0fff833da371 Author: James Shubin &amp;lt;james@shubin.ca&amp;gt; Date: Thu Aug 28 01:08:03 2014 -0400 Initial commit of vagrant-puppet-docker-template... This is an attempt to prototype a default environment for vagrant+puppet+docker hacking.</description>
    </item>
    <item>
      <title>Vagrant and Oh-My-Vagrant on RHEL7</title>
      <link>https://purpleidea.com/blog/2015/08/11/vagrant-and-oh-my-vagrant-on-rhel7/</link>
      <pubDate>Tue, 11 Aug 2015 15:09:16 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/08/11/vagrant-and-oh-my-vagrant-on-rhel7/</guid>
      <description>My employer keeps paying me, which I appreciate, so it&amp;rsquo;s good to spend some time to make sure RHEL7 customers get a great developer experience! So here&amp;rsquo;s how to make vagrant, vagrant-libvirt and Oh-My-Vagrant work on RHEL 7+. The same steps should work for CentOS 7+.&#xA;I&amp;rsquo;ll first paste the commands you need to run, and then I&amp;rsquo;ll explain what&amp;rsquo;s happening for those that are interested:&#xA;# run these commands, and then get hacking!</description>
    </item>
    <item>
      <title>Making an empty RPM</title>
      <link>https://purpleidea.com/blog/2015/08/11/making-an-empty-rpm/</link>
      <pubDate>Tue, 11 Aug 2015 13:25:58 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/08/11/making-an-empty-rpm/</guid>
      <description>I am definitely not an RPM expert, in fact, I&amp;rsquo;m afraid of it, but with recent tools such as COPR, and my glorious Makefile, some aspects of it have become palatable. This post will be about a recent journey I had building the most useless RPM ever.&#xA;A video of my journey building this RPM. Because of reasons, I wanted to satisfy an RPM dependency for a package that I wanted to install without rebuilding that RPM.</description>
    </item>
    <item>
      <title>Oh-My-Vagrant “Mainstream” mode and COPR RPM&#39;s</title>
      <link>https://purpleidea.com/blog/2015/07/08/oh-my-vagrant-mainstream-mode-and-copr-rpms/</link>
      <pubDate>Wed, 08 Jul 2015 01:14:19 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/07/08/oh-my-vagrant-mainstream-mode-and-copr-rpms/</guid>
      <description>Making Oh-My-Vagrant (OMV) more developer accessible and easy to install (from a distribution package like RPM) has always been a goal, but was previously never a priority. This is all sorted out now. In this article, I&amp;rsquo;ll explain how &amp;ldquo;mainstream&amp;rdquo; mode works, and how the RPM work was done. (I promise this will be somewhat interesting!)&#xA;Prerequisites:&#xA;If you haven&amp;rsquo;t read any of the previous articles about Oh-My-Vagrant, I&amp;rsquo;d recommend you start there.</description>
    </item>
    <item>
      <title>A super privileged Puppet container</title>
      <link>https://purpleidea.com/blog/2015/06/12/a-super-privileged-puppet-container/</link>
      <pubDate>Fri, 12 Jun 2015 18:06:55 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/06/12/a-super-privileged-puppet-container/</guid>
      <description>In this new crazy world of containers and immutable hosts, one might still want to run previous generation software such as Puppet on a current generation Atomic host. This article will explain how you can do that, and offer some proof of concept code.&#xA;The atomic host doesn&amp;rsquo;t provide a yum or dnf command, because the software is pre-baked into a read-only /usr/ partition. To &amp;ldquo;install&amp;rdquo; (to use) additional software, it usually needs to be distributed and run as a container.</description>
    </item>
    <item>
      <title>Docker containers in Oh-My-Vagrant</title>
      <link>https://purpleidea.com/blog/2015/04/20/docker-containers-in-oh-my-vagrant/</link>
      <pubDate>Mon, 20 Apr 2015 04:35:43 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/04/20/docker-containers-in-oh-my-vagrant/</guid>
      <description>The Oh-My-Vagrant (omv) project is an easy way to bootstrap a development environment. It is particularly useful for spinning up an arbitrary number of virtual machines in Vagrant without writing ruby code. For multi-machine container development, omv can be used to help this happen more naturally.&#xA;Oh-My-Vagrant can be very useful as a docker application development environment. I&amp;rsquo;ve made a quick (&amp;lt;9min) screencast demoing this topic. Please have a look:</description>
    </item>
    <item>
      <title>Building RHEL Vagrant Boxes with Vagrant-Builder</title>
      <link>https://purpleidea.com/blog/2015/02/23/building-rhel-vagrant-boxes-with-vagrant-builder/</link>
      <pubDate>Mon, 23 Feb 2015 22:48:39 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2015/02/23/building-rhel-vagrant-boxes-with-vagrant-builder/</guid>
      <description>Vagrant is a great tool for development, but Red Hat Enterprise Linux (RHEL) customers have typically been left out, because it has been impossible to get RHEL boxes! It would be extremely elegant if hackers could quickly test and prototype their code on the same OS as they&amp;rsquo;re running in production.&#xA;Secondly, when hacking on projects that have a long initial setup phase (eg: a long rpm install) it would be excellent if hackers could roll their own modified base boxes, so that certain common operations could be re-factored out into the base image.</description>
    </item>
    <item>
      <title>Introducing: Oh My Vagrant!</title>
      <link>https://purpleidea.com/blog/2014/09/03/introducing-oh-my-vagrant/</link>
      <pubDate>Wed, 03 Sep 2014 23:19:19 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/09/03/introducing-oh-my-vagrant/</guid>
      <description>If you&amp;rsquo;re a reader of my code or of this blog, it&amp;rsquo;s no secret that I hack on a lot of puppet and vagrant. Recently I&amp;rsquo;ve fooled around with a bit of docker, too. I realized that the vagrant, environments I built for puppet-gluster and puppet-ipa needed to be generalized, and they needed new features too. Therefore&amp;hellip;&#xA;Introducing: Oh My Vagrant!&#xA;Oh My Vagrant is an attempt to provide an easy to use development environment so that you can be up and hacking quickly, and focusing on the real devops problems.</description>
    </item>
    <item>
      <title>Hybrid management of FreeIPA types with Puppet</title>
      <link>https://purpleidea.com/blog/2014/07/24/hybrid-management-of-freeipa-types-with-puppet/</link>
      <pubDate>Thu, 24 Jul 2014 00:41:08 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/07/24/hybrid-management-of-freeipa-types-with-puppet/</guid>
      <description>(Note: this hybrid management technique is being demonstrated in the puppet-ipa module for FreeIPA, but the idea could be used for other modules and scenarios too. See below for some use cases&amp;hellip;)&#xA;The error message that puppet hackers are probably most familiar is:&#xA;Error: Duplicate declaration: Thing[/foo/bar] is already declared in file /tmp/baz.pp:2; cannot redeclare at /tmp/baz.pp:4 on node computer.example.com Typically this means that there is either a bug in your code, or someone has defined something more than once.</description>
    </item>
    <item>
      <title>Securely managing secrets for FreeIPA with Puppet</title>
      <link>https://purpleidea.com/blog/2014/06/06/securely-managing-secrets-for-freeipa-with-puppet/</link>
      <pubDate>Fri, 06 Jun 2014 06:12:19 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/06/06/securely-managing-secrets-for-freeipa-with-puppet/</guid>
      <description>Configuration management is an essential part of securing your infrastructure because it can make sure that it is set up correctly. It is essential that configuration management only enhance security, and not weaken it. Unfortunately, the status-quo of secret management in puppet is pretty poor.&#xA;In the worst (and most common) case, plain text passwords are found in manifests. If the module author tried harder, sometimes these password strings are pre-hashed (and sometimes salted) and fed directly into the consumer.</description>
    </item>
    <item>
      <title>Vagrant on Fedora with libvirt (reprise)</title>
      <link>https://purpleidea.com/blog/2014/05/13/vagrant-on-fedora-with-libvirt-reprise/</link>
      <pubDate>Tue, 13 May 2014 18:58:06 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/05/13/vagrant-on-fedora-with-libvirt-reprise/</guid>
      <description>Vagrant has become the de facto tool for devops. Faster iterations, clean environments, and less overhead. This isn&amp;rsquo;t an article about why you should use Vagrant. This is an article about how to get up and running with Vagrant on Fedora with libvirt easily!&#xA;Background:&#xA;This article is an update of my original Vagrant on Fedora with libvirt article. There is still lots of good information in that article, but this one should be easier to follow and uses updated versions of Vagrant and vagrant-libvirt.</description>
    </item>
    <item>
      <title>Speaking at SCALE today!</title>
      <link>https://purpleidea.com/blog/2014/02/21/speaking-at-scale-today/</link>
      <pubDate>Fri, 21 Feb 2014 13:54:47 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/02/21/speaking-at-scale-today/</guid>
      <description>I&amp;rsquo;ll be giving a talk at SCALE today about automatically deploying GlusterFS with Puppet-Gluster and Vagrant. I&amp;rsquo;ll be giving some live demos, and this will cover some of the material from:&#xA;Automatically deploying GlusterFS with Puppet-Gluster + Vagrant!&#xA;and it will contain excerpts from:&#xA;Screencasts of Puppet-Gluster + Vagrant&#xA;I&amp;rsquo;ll also be talking about some new upcoming features, and am happy to answer all of your questions!&#xA;The talk will be part of Infrastructure.</description>
    </item>
    <item>
      <title>Screencasts of Puppet-Gluster &#43; Vagrant</title>
      <link>https://purpleidea.com/blog/2014/01/27/screencasts-of-puppet-gluster-vagrant/</link>
      <pubDate>Mon, 27 Jan 2014 16:13:10 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/01/27/screencasts-of-puppet-gluster-vagrant/</guid>
      <description>I decided to record some screencasts to show how easy it is to deploy GlusterFS using Puppet-Gluster+Vagrant. You can follow along even if you don&amp;rsquo;t know anything about Puppet or Vagrant. The hardest part of this process was producing the actual videos!&#xA;If recommend first reading my earlier articles if you&amp;rsquo;re planning on following along:&#xA;Vagrant on Fedora with libvirt Vagrant vsftp and other tricks Vagrant clustered SSH and &#39;screen&#39; Automatically deploying GlusterFS with Puppet-Gluster + Vagrant!</description>
    </item>
    <item>
      <title>Building base images for Vagrant with a Makefile</title>
      <link>https://purpleidea.com/blog/2014/01/20/building-base-images-for-vagrant-with-a-makefile/</link>
      <pubDate>Mon, 20 Jan 2014 11:46:31 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/01/20/building-base-images-for-vagrant-with-a-makefile/</guid>
      <description>I needed a base image &amp;ldquo;box&amp;rdquo; for my Puppet-Gluster+Vagrant work. It would have been great if good boxes already existed, and even better if it were easy to build my own. As it turns out, I wasn&amp;rsquo;t able to satisfy either of these conditions, so I&amp;rsquo;ve had to build one myself! I&amp;rsquo;ve published all of my code, so that you can use these techniques and tools too!&#xA;Status quo:&#xA;Having an NIH problem is bad for your vision, and it&amp;rsquo;s best to benefit from existing tools before creating your own.</description>
    </item>
    <item>
      <title>Testing GlusterFS during “Glusterfest”</title>
      <link>https://purpleidea.com/blog/2014/01/16/testing-glusterfs-during-glusterfest/</link>
      <pubDate>Thu, 16 Jan 2014 20:28:17 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/01/16/testing-glusterfs-during-glusterfest/</guid>
      <description>The GlusterFS community is having a &amp;ldquo;test day&amp;rdquo;. Puppet-Gluster+Vagrant is a great tool to help with this, and it has now been patched to support alpha, beta, qa, and rc releases! Because it was built so well (*cough*, shameless plug), it only took one patch.&#xA;Okay, first make sure that your Puppet-Gluster+Vagrant setup is working properly. I have only tested this on Fedora 20. Please read:&#xA;Automatically deploying GlusterFS with Puppet-Gluster+Vagrant!</description>
    </item>
    <item>
      <title>Automatically deploying GlusterFS with Puppet-Gluster &#43; Vagrant!</title>
      <link>https://purpleidea.com/blog/2014/01/08/automatically-deploying-glusterfs-with-puppet-gluster-vagrant/</link>
      <pubDate>Wed, 08 Jan 2014 23:00:22 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/01/08/automatically-deploying-glusterfs-with-puppet-gluster-vagrant/</guid>
      <description>Puppet-Gluster was always about automating the deployment of GlusterFS. Getting your own Puppet server and the associated infrastructure running was never included &amp;ldquo;out of the box&amp;rdquo;. Today, it is! (This is big news!)&#xA;I&amp;rsquo;ve used Vagrant to automatically build these GlusterFS clusters. I&amp;rsquo;ve tested this with Fedora 20, and vagrant-libvirt. This won&amp;rsquo;t work with Fedora 19 because of bz#876541. I recommend first reading my earlier articles for Vagrant and Fedora:</description>
    </item>
    <item>
      <title>Vagrant clustered SSH and ‘screen’</title>
      <link>https://purpleidea.com/blog/2014/01/02/vagrant-clustered-ssh-and-screen/</link>
      <pubDate>Thu, 02 Jan 2014 00:40:49 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2014/01/02/vagrant-clustered-ssh-and-screen/</guid>
      <description>Some fun updates for vagrant hackers&amp;hellip; I wanted to use the venerable clustered SSH (cssh) and screen with vagrant. I decided to expand on my vsftp script. First read:&#xA;Vagrant on Fedora with libvirt&#xA;and Vagrant vsftp and other tricks&#xA;to get up to speed on the background information. Vagrant screen:&#xA;First, a simple screen hack&amp;hellip; I often use my vssh alias to quickly ssh into a machine, but I don&amp;rsquo;t want to have to waste time with sudo-ing to root and then running screen each time.</description>
    </item>
    <item>
      <title>Vagrant vsftp and other tricks</title>
      <link>https://purpleidea.com/blog/2013/12/21/vagrant-vsftp-and-other-tricks/</link>
      <pubDate>Sat, 21 Dec 2013 11:58:49 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2013/12/21/vagrant-vsftp-and-other-tricks/</guid>
      <description>As I previously wrote, I&amp;rsquo;ve been busy with Vagrant on Fedora with libvirt, and have even been submitting, patches and issues! (This &amp;ldquo;closed&amp;rdquo; issue needs solving!) Here are some of the tricks that I&amp;rsquo;ve used while hacking away.&#xA;Default provider:&#xA;I should have mentioned this in my earlier article but I forgot: If you&amp;rsquo;re always using the same provider, you might want to set it as the default. In my case I&amp;rsquo;m using vagrant-libvirt.</description>
    </item>
    <item>
      <title>Vagrant on Fedora with libvirt</title>
      <link>https://purpleidea.com/blog/2013/12/09/vagrant-on-fedora-with-libvirt/</link>
      <pubDate>Mon, 09 Dec 2013 20:14:51 +0000</pubDate>
      <guid>https://purpleidea.com/blog/2013/12/09/vagrant-on-fedora-with-libvirt/</guid>
      <description>Apparently lots of people are using Vagrant these days, so I figured I&amp;rsquo;d try it out. I wanted to get it working on Fedora, and without Virtualbox. This is an intro article on Vagrant, and what I&amp;rsquo;ve done. I did this on Fedora 19. Feel free to suggest improvements.&#xA;Intro:&#xA;Vagrant is a tool that easily provisions virtual machines, and then kicks off a configuration management deployment like Puppet. It&amp;rsquo;s often used for development.</description>
    </item>
  </channel>
</rss>
